[gd_resource type="VisualShader" load_steps=19 format=2]

[ext_resource path="res://new_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]

output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=2]


[sub_resource type="VisualShaderNodeScalarFunc" id=3]

output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeVec3Constant" id=4]

output_port_for_preview = 0
constant = Vector3( 0.5, 1, 15 )

[sub_resource type="VisualShaderNodeScalarOp" id=5]

default_input_values = [ 0, 0.0, 1, 0.015 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=6]

output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeVectorOp" id=7]

operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=8]

output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=9]

output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=12]

output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=14]

input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=15]

output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeInput" id=16]

output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=17]

input_name = "vertex"

[sub_resource type="VisualShaderNodeColorConstant" id=18]

constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=19]


[sub_resource type="VisualShaderNodeInput" id=20]


[resource]

code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled;

uniform sampler2D tex_frg_3;


void vertex() {
// Color:4
	vec3 n_out4p0;
	float n_out4p1;
	n_out4p0 = vec3(0.000000,0.000000,0.000000);
	n_out4p1 = 1.000000;

// Entrada:3
	vec3 n_out3p0;
	n_out3p0 = VERTEX;

// VectorOp:5
	vec3 n_out5p0;
	n_out5p0 = n_out4p0 + n_out3p0;

// Salida:0
	VERTEX = n_out5p0;

}

void fragment() {
// Entrada:4
	vec3 n_out4p0;
	n_out4p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = texture( tex_frg_3 , n_out4p0.xy );
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// Entrada:31
	float n_out31p0;
	n_out31p0 = TIME;

// ScalarFunc:32
	float n_out32p0;
	n_out32p0 = sin(n_out31p0);

// ScalarOp:11
	float n_out11p0;
	n_out11p0 = dot(n_out3p0,vec3(0.333333,0.333333,0.333333)) + n_out32p0;

// ScalarFunc:10
	float n_out10p0;
	n_out10p0 = round(n_out11p0);

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = min(max(n_out10p0,0),1);

// ScalarOp:20
	float n_in20p1 = 0.01500;
	float n_out20p0;
	n_out20p0 = n_out11p0 - n_in20p1;

// ScalarFunc:26
	float n_out26p0;
	n_out26p0 = round(n_out20p0);

// ScalarFunc:21
	float n_out21p0;
	n_out21p0 = min(max(n_out26p0,0),1);

// ScalarOp:27
	float n_in27p0 = 1.00000;
	float n_out27p0;
	n_out27p0 = n_in27p0 - n_out21p0;

// Vector:18
	vec3 n_out18p0;
	n_out18p0 = vec3(0.500000,1.000000,15.000000);

// VectorOp:22
	vec3 n_out22p0;
	n_out22p0 = vec3(n_out27p0) * n_out18p0;

// Salida:0
	ALPHA = n_out13p0;
	EMISSION = n_out22p0;

}

void light() {
// Salida:0

}
"
graph_offset = Vector2( 1041, -175 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 580, 100 )
nodes/vertex/3/node = SubResource( 17 )
nodes/vertex/3/position = Vector2( 100, 300 )
nodes/vertex/4/node = SubResource( 18 )
nodes/vertex/4/position = Vector2( 200, 140 )
nodes/vertex/5/node = SubResource( 19 )
nodes/vertex/5/position = Vector2( 360, 140 )
nodes/vertex/6/node = SubResource( 20 )
nodes/vertex/6/position = Vector2( 300, 340 )
nodes/vertex/connections = PoolIntArray( 4, 0, 5, 0, 3, 0, 5, 1, 5, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1920, -160 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( 540, -140 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( 340, -20 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1120, -140 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 760, -40 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 1320, -140 )
nodes/fragment/18/node = SubResource( 4 )
nodes/fragment/18/position = Vector2( 1520, 240 )
nodes/fragment/20/node = SubResource( 5 )
nodes/fragment/20/position = Vector2( 940, 100 )
nodes/fragment/21/node = SubResource( 6 )
nodes/fragment/21/position = Vector2( 1320, 20 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( 1720, 100 )
nodes/fragment/26/node = SubResource( 8 )
nodes/fragment/26/position = Vector2( 1120, 20 )
nodes/fragment/27/node = SubResource( 9 )
nodes/fragment/27/position = Vector2( 1520, 20 )
nodes/fragment/31/node = SubResource( 14 )
nodes/fragment/31/position = Vector2( 340, 160 )
nodes/fragment/32/node = SubResource( 15 )
nodes/fragment/32/position = Vector2( 540, 160 )
nodes/fragment/connections = PoolIntArray( 11, 0, 20, 0, 22, 0, 0, 5, 20, 0, 26, 0, 11, 0, 10, 0, 21, 0, 27, 1, 26, 0, 21, 0, 10, 0, 13, 0, 4, 0, 3, 0, 31, 0, 32, 0, 32, 0, 11, 1, 3, 0, 11, 0, 27, 0, 22, 0, 18, 0, 22, 1, 13, 0, 0, 1 )

